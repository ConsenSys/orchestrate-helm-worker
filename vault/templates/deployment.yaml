---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}
    helm.sh/chart: {{ include "vault.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.aws.kube2iamRole }}
        iam.amazonaws.com/role: {{ .Values.aws.kube2iamRole }}
        {{- end }}
    spec:
      serviceAccountName: "vault-server"
      initContainers:
        - name: certificate-init-container
          image: proofpoint/certificate-init-container:0.4.0
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - "-namespace=$(NAMESPACE)"
            - "-pod-name=$(POD_NAME)"
            - "-ips=$(POD_IP)"
            - "-service-names={{ include "vault.name" . }}"
            - "-dns-names={{ include "vault.name" . }},{{ include "vault.name" . }}.{{ .Release.Namespace }}"
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - vault
          args:
            - server
            - -config
            - /vault/config/config.json
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true&uninitcode=204&sealedcode=204
              port: 8200
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /v1/sys/health?standbycode=204&uninitcode=204&sealedcode=204
              port: 8200
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 3
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_API_ADDR
              value: "https://$(POD_IP):8200"
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(POD_IP):8201"
          ports:
            - name: api
              containerPort: 8200
              protocol: TCP
            - name: cluster
              containerPort: 8201
              protocol: TCP
          volumeMounts:
            - name: vault-config
              mountPath: /vault/config
            - name: tls
              mountPath: /etc/tls
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: tls
          emptyDir:
            medium: Memory
            sizeLimit: 1Mi
        - name: vault-config
          configMap:
            name: {{ include "vault.fullname" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
